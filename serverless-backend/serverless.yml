service: serverless-backend

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
    LESSONS_TABLE: !Ref LessonsTable

functions:
  getLessons:
    handler: handlers/lessons/index.main
    events:
      - http:
          path: lessons
          method: GET
          cors: true
    environment:
      LESSONS_TABLE: !Ref LessonsTable
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:Scan
        Resource: !GetAtt LessonsTable.Arn

  createLesson:
    handler: handlers/lessons/create.main
    events:
      - http:
          path: lessons
          method: POST
          cors: true
    environment:
      LESSONS_TABLE: !Ref LessonsTable
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:PutItem
        Resource: !GetAtt LessonsTable.Arn

resources:
  Resources:
    LessonsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S

plugins:
  - serverless-offline
  - serverless-iam-roles-per-function
